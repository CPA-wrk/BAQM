[{"path":"https://cpa-wrk.github.io/BAQM/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://cpa-wrk.github.io/BAQM/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://cpa-wrk.github.io/BAQM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Lert. Author, maintainer, copyright holder.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lert P (2025). BAQM: Analytics Functions Babson AQM Courses. R package version 0.1.2, https://github.com/CPA-wrk/BAQM.","code":"@Manual{,   title = {BAQM: Analytics Functions for Babson AQM Courses},   author = {Peter Lert},   year = {2025},   note = {R package version 0.1.2},   url = {https://github.com/CPA-wrk/BAQM}, }"},{"path":"https://cpa-wrk.github.io/BAQM/index.html","id":"baqm","dir":"","previous_headings":"","what":"Analytics Functions for Babson AQM Courses","title":"Analytics Functions for Babson AQM Courses","text":"BAQM supplies functions developed Babson College instructors AQM 1000 AQM 2000 courses using R curriculum. primary functions include: stat_desc() - function produce descriptive statistics data frames summary.lm() - function summarize linear model results lm_plot.4way() - function produce diagnostic plots linear models print.summary.regsubsets() - function format “best subsets” report created regsubsets function leaps package","code":""},{"path":"https://cpa-wrk.github.io/BAQM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analytics Functions for Babson AQM Courses","text":"can install development version BAQM GitHub :","code":"# install.packages(\"pak\") # pak::pak(\"CPA-wrk/BAQM\")"},{"path":"https://cpa-wrk.github.io/BAQM/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Analytics Functions for Babson AQM Courses","text":"summaries built-R data sets swiss iris, best-subsets analysis modeling Fertility swiss linear model analytics Sepal Length iris. (Variable names truncated swiss narrow output.)","code":"library(leaps) library(BAQM) #> Registered S3 methods overwritten by 'BAQM': #>   method                   from  #>   print.summary.lm         stats #>   print.summary.regsubsets leaps #>   summary.lm               stats names(swiss) # Show original variable names #> [1] \"Fertility\"        \"Agriculture\"      \"Examination\"      \"Education\"        #> [5] \"Catholic\"         \"Infant.Mortality\" names(swiss) <- substr(names(swiss), 1, 4) # Narrows output stat_desc(swiss) #>           Fert   Agri   Exam   Educ   Cath   Infa #> n.val       47     47     47     47     47     47 #> n.na         0      0      0      0      0      0 #> min         35    1.2      3      1   2.15   10.8 #> Q1        64.4   35.3     12      6   5.16     18 #> median    70.4   54.1     16      8  15.14     20 #> mean     70.14  50.66  16.49  10.98  41.14  19.94 #> Q3        79.3   67.8     22   12.5   93.4   22.2 #> max       92.5   89.7     37     53    100   26.6 #> std.dev  12.49  22.71  7.978  9.615   41.7  2.913 # regs <- regsubsets(Fert ~ ., data = swiss, nbest = 3) summary(regs) #>    _k_i.best    rsq  adjr2       see    cp Agri Exam Educ Cath Infa #> 1   1  ( 1 ) 0.4406 0.4282  9.446029 35.20              *           #> 2   1  ( 2 ) 0.4172 0.4042  9.642000 38.48         *                #> 3   1  ( 3 ) 0.2150 0.1976 11.189945 66.75                   *      #> 4   2  ( 1 ) 0.5745 0.5552  8.331442 18.49              *    *      #> 5   2  ( 2 ) 0.5648 0.5450  8.426136 19.85              *         * #> 6   2  ( 3 ) 0.5363 0.5152  8.697447 23.83         *              * #> 7   3  ( 1 ) 0.6625 0.6390  7.505417  8.18              *    *    * #> 8   3  ( 2 ) 0.6423 0.6173  7.727757 11.01    *         *    *      #> 9   3  ( 3 ) 0.6191 0.5925  7.973957 14.25         *    *         * #> 10  4  ( 1 ) 0.6993 0.6707  7.168166  5.03    *         *    *    * #> 11  4  ( 2 ) 0.6639 0.6319  7.579356  9.99         *    *    *    * #> 12  4  ( 3 ) 0.6498 0.6164  7.736422 11.96    *    *    *    *      #> 13  5  ( 1 ) 0.7067 0.6710  7.165369  6.00    *    *    *    *    * # stat_desc(iris) # Includes non-numeric variable #>          Sepal.Length  Sepal.Width  Petal.Length  Petal.Width   Species #> n.val             150          150           150          150       150 #> n.na                0            0             0            0         0 #> min               4.3            2             1          0.1  n.lvls=3 #> Q1                5.1          2.7           1.6          0.2  setos:50 #> median            5.8            3          4.35          1.3  vrscl:50 #> mean            5.843        3.057         3.758        1.199  vrgnc:50 #> Q3               6.45          3.4           5.1          1.8           #> max               7.9          4.4           6.9          2.5           #> std.dev        0.8281       0.4359         1.765       0.7622 # mdl <- lm(Sepal.Length ~ ., data = iris) summary(mdl) #>  #> Summary Statistics: #>                  Value      Performance    Measure  Err(Resids)    Metric #> Observations =     150      R-Squared =    0.86731       MAPE =  0.041785 #> F-Statistic =   188.25      Adj-R2 =       0.86271       MAD  =   0.24286 #> Pr(b's=0) =     <2e-16 ***  Std.Err.Est =  0.30683       RMSE =   0.30063 #>  #> Analysis of Variance: #>                Deg.Frdm  Sum.of.Sqs  Mean.Sum.Sqs  F.statistic  p-value(F)     #> Regression            5      88.612     17.722370       188.25      <2e-16 *** #> Error(Resids)       144      13.556      0.094142                              #> Total               149     102.168                                            #>  #> Coefficients: #>                     Coefficient  Std.Error   t-stat   p-value          VIF #> (Intercept)             2.17127   0.279794   7.7602  1.43e-12 ***          #> Sepal.Width             0.49589   0.086070   5.7615  4.87e-08 ***   2.2275 #> Petal.Length            0.82924   0.068528  12.1009   < 2e-16 ***  23.1616 #> Petal.Width            -0.31516   0.151196  -2.0844   0.03889 *    21.0214 #> Species_versicolor     -0.72356   0.240169  -3.0127   0.00306 **   20.4234 #> Species_virginica      -1.02350   0.333726  -3.0669   0.00258 **   39.4344 #>                                                                       #> Signif.Levels:  0 '***' 0.001 '** ' 0.01 '*  ' 0.05 '.  ' 0.1 '   ' 1 #>                                                                  #> Summary of   Min       1Q      Mean    Median     3Q      Max    #> Residuals: -0.7942  -0.2187   <3e-14  0.008987  0.2025   0.731   #>                                                    #> Call:  lm(formula = Sepal.Length ~ ., data = iris) # lm_plot.lst <- lm_plot.4way(mdl) lm_plot.lst$p_4way"},{"path":"https://cpa-wrk.github.io/BAQM/reference/BAQM-package.html","id":null,"dir":"Reference","previous_headings":"","what":"BAQM: Analytics Functions for Babson AQM Courses — BAQM-package","title":"BAQM: Analytics Functions for Babson AQM Courses — BAQM-package","text":"Instructor-developed tools AQM 1000 AQM 2000 courses using R curriculum.","code":""},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/reference/BAQM-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BAQM: Analytics Functions for Babson AQM Courses — BAQM-package","text":"Maintainer: Peter Lert plert@babson.edu [copyright holder]","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.4way.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Four-Panel Regression Assumptions Plot — lm_plot.4way","title":"Create a Four-Panel Regression Assumptions Plot — lm_plot.4way","text":"Generates 4-panel diagnostic plot multiple regression model, including: 1) Fitted values vs. observed values (check non-linearity), 2) Quantile–Quantile plot residuals (check non-normality), 3) Residuals vs. fitted values (check heteroskedasticity), 4) Autocorrelation time series otherwise influence plot (leverage also available).","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.4way.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Four-Panel Regression Assumptions Plot — lm_plot.4way","text":"","code":"lm_plot.4way(   mdl,   opt = list(ts = FALSE),   parm = list(),   plt_nms = c(\"fit\", \"var\", \"qq\", ifelse(opt$ts, \"ac\", \"infl\")) )"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.4way.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Four-Panel Regression Assumptions Plot — lm_plot.4way","text":"mdl fitted model object (typically lm). opt named list options. Recognized elements include: ts Logical; TRUE data time series, FALSE otherwise. pred.intvl Logical; plot prediction interval fitted vs observed. pval.SW, pval.BP, pval.DW Logical; include p-values Shapiro–Wilk,     Breusch–Pagan, Durbin–Watson tests plots. cook.loess Logical; whether overlay Cook's distance loess curve. parm List plot formatting parameters (see lm_plot.parms). plt_nms Character vector panels plot. Defaults fit, var, qq, ac/infl depending opt$ts.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.4way.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Four-Panel Regression Assumptions Plot — lm_plot.4way","text":"ggplot object representing 4-way diagnostic panel.   Invisibly returns list containing: p_4way – combined plot, elements passed individual plot functions.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.4way.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Four-Panel Regression Assumptions Plot — lm_plot.4way","text":"function high-level wrapper calls internal plotting functions (lm_plot.fit, lm_plot.var, lm_plot.qq, either lm_plot.ac lm_plot.infl) assembles outputs combined plot_grid.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.4way.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Four-Panel Regression Assumptions Plot — lm_plot.4way","text":"","code":"if (FALSE) { # \\dontrun{ fit <- lm(mpg ~ wt + hp, data = mtcars) lm_plot.4way(fit, opt = list(ts = FALSE, pval.DW = TRUE)) } # }"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.ac.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Residuals vs. Observation Order (Autocorrelation Check) — lm_plot.ac","title":"Plot Residuals vs. Observation Order (Autocorrelation Check) — lm_plot.ac","text":"Creates plot residuals sequence/order observations visually assess independence detect autocorrelation. Optionally overlays results Durbin–Watson test labels outliers.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.ac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Residuals vs. Observation Order (Autocorrelation Check) — lm_plot.ac","text":"","code":"lm_plot.ac(   mdl,   opt = list(),   parm = list(),   df = lm_plot.df(mdl),   plts = list() )"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.ac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Residuals vs. Observation Order (Autocorrelation Check) — lm_plot.ac","text":"mdl fitted model object (typically lm). opt List options, pval.DW (logical, default = FALSE) indicates whether include Durbin-Watson p-value plot. parm list plotting parameters, usually lm_plot.parms(). df Data frame augmented model data. Defaults lm_plot.df(mdl). plts list ggplot objects plot added.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.ac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Residuals vs. Observation Order (Autocorrelation Check) — lm_plot.ac","text":"list containing: mdl Fitted model object, opt Options used, including pval.DW, parm Parameter list Durbin-Watson test results added, df Data frame used plotting, plts List ggplot objects, including $ac element.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.ac.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Residuals vs. Observation Order (Autocorrelation Check) — lm_plot.ac","text":"Points colored shaped according whether residual outliers (determined Tukey's boxplot rule). function can label points using ggrepel parm$pts$id$outl parm$pts$id$reg set TRUE.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.ac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Residuals vs. Observation Order (Autocorrelation Check) — lm_plot.ac","text":"","code":"if (FALSE) { # \\dontrun{ fit <- lm(mpg ~ wt + hp, data = mtcars) lm_plot.ac(fit) } # }"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.df.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Model Data for Diagnostic Plots — lm_plot.df","title":"Augment Model Data for Diagnostic Plots — lm_plot.df","text":"Generates augmented data frame linear model object, including fitted values, residuals, leverage, Cook's distance, prediction intervals, outlier/influence flags. function prepares model diagnostics plotting.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Model Data for Diagnostic Plots — lm_plot.df","text":"","code":"lm_plot.df(mdl, parm = list())"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Model Data for Diagnostic Plots — lm_plot.df","text":"mdl object class lm, representing fitted linear model. parm List plotting parameters, usually lm_plot.parms().","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Model Data for Diagnostic Plots — lm_plot.df","text":"data frame augmented diagnostic variables, one row per observation.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment Model Data for Diagnostic Plots — lm_plot.df","text":"returned data frame contains key statistics observation: .id: Observation identifier .sequence: Sequence index .obs: Observed values .fits: Fitted/predicted values .resid: Residuals .se.fit: Estimated standard error fitted (mean) value .lower.pi: Lower bound 95% prediction interval fitted value .upper.pi: Upper bound 95% prediction interval fitted value .std.resid: Standardized residuals .stud.resid: Studentized residuals .cooksd: Cook's distance .hat: Leverage (diagonal hat matrix) .quantile: Theoretical normal quantile residuals ..outl: Flag residual outlier (\"outl\" \"reg\") ..infl: Flag influential point (\"infl\" \"outl\" \"reg\") ..lev: Flag high leverage point (\"lev\" \"infl\" \"reg\")","code":""},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment Model Data for Diagnostic Plots — lm_plot.df","text":"","code":"mdl <- lm(Sepal.Length ~ Sepal.Width, data = iris) df <- lm_plot.df(mdl) head(df) #>   .id .sequence .obs    .fits     .resid    .se.fit .lower.pi .upper.pi #> 1   1         1  5.1 5.744459 -0.6444588 0.09618352  4.102926  7.385992 #> 2   2         2  4.9 5.856139 -0.9561394 0.06795306  4.220127  7.492152 #> 3   3         3  4.7 5.811467 -1.1114672 0.07090891  4.174965  7.447969 #> 4   4         4  4.6 5.833803 -1.2338033 0.06769302  4.197833  7.469773 #> 5   5         5  5.0 5.722123 -0.7221227 0.10780077  4.077773  7.366472 #> 6   6         6  5.4 5.655114 -0.2551144 0.14702457  3.998939  7.311290 #>   .std.resid .stud.resid     .cooksd        .hat  .quantile .is.outl .is.infl #> 1 -0.7864325  -0.7854139 0.004260169 0.013589132 -0.6744898      reg      reg #> 2 -1.1627712  -1.1641660 0.004616605 0.006782791 -1.0954185      reg      reg #> 3 -1.3520774  -1.3559020 0.006801185 0.007385705 -1.5273795      reg      reg #> 4 -1.5004021  -1.5068286 0.007627752 0.006730978 -1.7907506      reg      reg #> 5 -0.8827646  -0.8821026 0.006766613 0.017070023 -0.7609839      reg      reg #> 6 -0.3142222  -0.3132634 0.001618927 0.031751938 -0.2104284      reg      reg #>   .is.lev #> 1     reg #> 2     reg #> 3     reg #> 4     reg #> 5     reg #> 6     lev"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Observed vs. Fitted Values to Check Linearity — lm_plot.fit","title":"Plot Observed vs. Fitted Values to Check Linearity — lm_plot.fit","text":"Generates scatter plot fitted values versus observed values linear model, optional prediction intervals identification outlier points. plot includes reference line y = x assessing linearity.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Observed vs. Fitted Values to Check Linearity — lm_plot.fit","text":"","code":"lm_plot.fit(   mdl,   opt = list(),   parm = list(),   df = lm_plot.df(mdl),   plts = list() )"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Observed vs. Fitted Values to Check Linearity — lm_plot.fit","text":"mdl fitted model object (typically lm). opt List options, pred_intvl_pts (numeric, default = 100) used prediction interval bounds fitted values (0 skip). parm List plotting parameters, usually lm_plot.parms(). df Data frame augmented model data. Defaults lm_plot.df(mdl). plts List ggplot objects plot added.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Observed vs. Fitted Values to Check Linearity — lm_plot.fit","text":"list containing: mdl Fitted model object, opt Options used, including pred_intvl_pts, parm Parameter list autocorrelation test results added, df Data frame used plotting, plts List ggplot objects, including $fit element.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Observed vs. Fitted Values to Check Linearity — lm_plot.fit","text":"plot visualizes fitted versus observed values, includes diagonal reference line, marks outliers, can optionally display loess-smoothed prediction intervals. Outlier regular points can labeled. plot useful visually assessing linearity model fit quality.","code":""},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Observed vs. Fitted Values to Check Linearity — lm_plot.fit","text":"","code":"mdl <- lm(Sepal.Length ~ Sepal.Width, data = iris) result <- lm_plot.fit(mdl) print(result$plts$fit)"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.infl.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Leverage vs. Fitted Values to Visualize Inflential Observations — lm_plot.infl","title":"Plot Leverage vs. Fitted Values to Visualize Inflential Observations — lm_plot.infl","text":"Creates plot leverage values versus linear fitted values, including identification points large Cook's distance, visualize high-leverage influential observations.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.infl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Leverage vs. Fitted Values to Visualize Inflential Observations — lm_plot.infl","text":"","code":"lm_plot.infl(   mdl,   opt = list(),   parm = list(),   df = lm_plot.df(mdl, parm),   plts = list() )"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.infl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Leverage vs. Fitted Values to Visualize Inflential Observations — lm_plot.infl","text":"mdl fitted model object (typically lm). opt List options (used). parm List plotting parameters, usually lm_plot.parms(). df Data frame augmented model data. Defaults lm_plot.df(mdl). plts List ggplot objects plot added.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.infl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Leverage vs. Fitted Values to Visualize Inflential Observations — lm_plot.infl","text":"list containing: mdl Fitted model object, opt List options (unchanged), parm Parameter list plotting, df Data frame used plotting, plts List ggplot objects, including $infl element.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.infl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Leverage vs. Fitted Values to Visualize Inflential Observations — lm_plot.infl","text":"plot visualizes calculated leverage individual data points, defined diagonal element 'hat' matrix, function fitted values implicitly relative location field predictor variables, threshold value high leverage indicated. addition, Cook's distance can used label influential points, along outlier regular points.","code":""},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.infl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Leverage vs. Fitted Values to Visualize Inflential Observations — lm_plot.infl","text":"","code":"if (FALSE) { # \\dontrun{ mdl <- lm(Sepal.Length ~ Sepal.Width, data = iris) result <- lm_plot.infl(mdl) print(result$plts$infl) } # }"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.lev.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Standard Residuals vs. Leverage with Cook's Distance Contours — lm_plot.lev","title":"Plot Standard Residuals vs. Leverage with Cook's Distance Contours — lm_plot.lev","text":"Creates plot standard residuals versus leverage values, including Cook's distance contours visualize influential observations.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.lev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Standard Residuals vs. Leverage with Cook's Distance Contours — lm_plot.lev","text":"","code":"lm_plot.lev(   mdl,   opt = list(),   parm = list(),   df = lm_plot.df(mdl),   plts = list() )"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.lev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Standard Residuals vs. Leverage with Cook's Distance Contours — lm_plot.lev","text":"mdl fitted model object (typically lm). opt List options, cook.loess (logical, default = FALSE) indicates whether show loess curve Cook's distances plot. parm List plotting parameters, usually lm_plot.parms(). df Data frame augmented model data. Defaults lm_plot.df(mdl). plts List ggplot objects plot added.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.lev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Standard Residuals vs. Leverage with Cook's Distance Contours — lm_plot.lev","text":"list containing: mdl Fitted model object, opt List options, including cook.loess, parm Parameter list plotting, including Cook's distance contours, df Data frame used plotting, plts List ggplot objects, including $lev element.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.lev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Standard Residuals vs. Leverage with Cook's Distance Contours — lm_plot.lev","text":"plot displays standard residuals leverage, overlays Cook's distance contours, marks outliers based residuals Cook's distance. Outlier influential points can labeled, loess fit line optionally added.","code":""},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.lev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Standard Residuals vs. Leverage with Cook's Distance Contours — lm_plot.lev","text":"","code":"if (FALSE) { # \\dontrun{ mdl <- lm(Sepal.Length ~ Sepal.Width, data = iris) result <- lm_plot.lev(mdl) print(result$plts$lev) } # }"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.parms.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or Retrieve Default Plot Parameters for Model Diagnostic Plots — lm_plot.parms","title":"Set or Retrieve Default Plot Parameters for Model Diagnostic Plots — lm_plot.parms","text":"Initializes updates list plot element parameters use model diagnostic plotting functions. required parameter missing invalid, default value supplied.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.parms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or Retrieve Default Plot Parameters for Model Diagnostic Plots — lm_plot.parms","text":"","code":"lm_plot.parms(mdl, parms = list())"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.parms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or Retrieve Default Plot Parameters for Model Diagnostic Plots — lm_plot.parms","text":"mdl object class lm. parms list plot parameters. missing invalid entries replaced defaults.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.parms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or Retrieve Default Plot Parameters for Model Diagnostic Plots — lm_plot.parms","text":"list plot element parameters defaults filled missing invalid entries.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.parms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set or Retrieve Default Plot Parameters for Model Diagnostic Plots — lm_plot.parms","text":"returned list contains parameters points (size, color, shape), lines (type, color, size), options plot features, Cook's distance/Influence contours. used lm_plot.* functions control plot appearance annotation. Key defaults include: pts: Properties points (size, color, shape, outlier flags) lins: Properties lines (type, color, size) opt: Logical options plot features (e.g., time series, prediction interval, test statistics) cook: Cook's distance contour settings (points, levels, line type) infl: Influence line settings (line type) See function code full list available settings default values.","code":""},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.parms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set or Retrieve Default Plot Parameters for Model Diagnostic Plots — lm_plot.parms","text":"","code":"# Retrieve default parameters parms <- lm_plot.parms(mdl = lm(Sepal.Length ~ Sepal.Width, data = iris)) # Set custom color for regular points parms <- lm_plot.parms(mdl = lm(Sepal.Length ~ Sepal.Width, data = iris),                        parms = list(pts = list(colr = list(reg = \"blue\"))))"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.qq.html","id":null,"dir":"Reference","previous_headings":"","what":"Q-Q Plot of Residuals to Assess Normality — lm_plot.qq","title":"Q-Q Plot of Residuals to Assess Normality — lm_plot.qq","text":"Produces Q-Q plot residuals linear model test normality, optionally annotating outlier points adding Shapiro-Wilk test p-value.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.qq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Q-Q Plot of Residuals to Assess Normality — lm_plot.qq","text":"","code":"lm_plot.qq(   mdl,   opt = list(),   parm = list(),   df = lm_plot.df(mdl),   plts = list() )"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.qq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Q-Q Plot of Residuals to Assess Normality — lm_plot.qq","text":"mdl fitted model object (typically lm). opt List options, pval.SW (logical, default = FALSE) indicates whether include Shapiro-Wilk p-value plot. parm List plotting parameters, usually lm_plot.parms(). df Data frame augmented model data. Defaults lm_plot.df(mdl). plts List ggplot objects plot added.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.qq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Q-Q Plot of Residuals to Assess Normality — lm_plot.qq","text":"list containing: mdl Fitted model object, opt Options used, including pval.SW, parm Parameter list Shapiro-Wilk test results added, df Data frame used plotting, plts List ggplot objects, including $qq element.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.qq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Q-Q Plot of Residuals to Assess Normality — lm_plot.qq","text":"plot visualizes distribution residuals theoretical normal quantiles. Points colored shaped outlier status, reference Q-Q line added. Optionally, outlier regular points can labeled. enabled, Shapiro-Wilk normality test p-value displayed.","code":""},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.qq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Q-Q Plot of Residuals to Assess Normality — lm_plot.qq","text":"","code":"mdl <- lm(Sepal.Length ~ Sepal.Width, data = iris) result <- lm_plot.qq(mdl) print(result$plts$qq)"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.var.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Residuals vs. Fitted Values to Assess Homoskedasticity — lm_plot.var","title":"Plot Residuals vs. Fitted Values to Assess Homoskedasticity — lm_plot.var","text":"Produces scatter plot residuals fitted values linear model, highlighting outlier points optionally displaying Breusch-Pagan test p-value heteroskedasticity.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Residuals vs. Fitted Values to Assess Homoskedasticity — lm_plot.var","text":"","code":"lm_plot.var(   mdl,   opt = list(),   parm = list(),   df = lm_plot.df(mdl),   plts = list() )"},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Residuals vs. Fitted Values to Assess Homoskedasticity — lm_plot.var","text":"mdl fitted model object (typically lm). opt List options, pval.BP (logical, default = FALSE) indicates whether include Breusch-Pagan p-value plot. parm List plotting parameters, usually lm_plot.parms(). df Data frame augmented model data. Defaults lm_plot.df(mdl). plts List ggplot objects plot added.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Residuals vs. Fitted Values to Assess Homoskedasticity — lm_plot.var","text":"list containing: mdl Fitted model object, opt Options used, including pval.BP, parm Parameter list Breusch-Pagan test results added, df Data frame used plotting, plts List ggplot objects, including $var element.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.var.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Residuals vs. Fitted Values to Assess Homoskedasticity — lm_plot.var","text":"plot visualizes residuals versus fitted values assess homoskedasticity (constant variance). Points colored shaped outlier status, outlier/regular points can labeled. enabled, Breusch-Pagan test heteroskedasticity run p-value annotated plot.","code":""},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/reference/lm_plot.var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Residuals vs. Fitted Values to Assess Homoskedasticity — lm_plot.var","text":"","code":"mdl <- lm(Sepal.Length ~ Sepal.Width, data = iris) result <- lm_plot.var(mdl) print(result$plts$var)"},{"path":"https://cpa-wrk.github.io/BAQM/reference/outlier.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Outliers Using Boxplot Heuristic — outlier","title":"Identify Outliers Using Boxplot Heuristic — outlier","text":"Detects outliers numeric vector using boxplot heuristic (default, outside 1.5 times IQR 1st 3rd quartiles). Handles missing values (NA) automatically.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/outlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Outliers Using Boxplot Heuristic — outlier","text":"","code":"outlier(x, coef = 1.5, rpt = FALSE)"},{"path":"https://cpa-wrk.github.io/BAQM/reference/outlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Outliers Using Boxplot Heuristic — outlier","text":"x Numeric vector outliers detected. coef Numeric value boxplot heuristic coefficient (default 1.5). Higher values result fewer points classified outliers. rpt Logical. FALSE (default), returns logical vector indicating elements x outliers. TRUE, returns calculated lower upper limits outlier detection, identified x < rpt[1] | x > rpt[2].","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/outlier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Outliers Using Boxplot Heuristic — outlier","text":"rpt = FALSE, returns logical vector indicating outliers. rpt = TRUE, returns numeric vector length 2 giving lower upper limits outlier detection","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/outlier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Outliers Using Boxplot Heuristic — outlier","text":"","code":"set.seed(1) vals <- c(rnorm(100), 10, -10) outlier(valsoutlier(vals, rpt = TRUE) #>     lower     upper  #> -2.358805  2.527535"},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.summary.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a Summary for Linear Model Objects — print.summary.lm","title":"Print a Summary for Linear Model Objects — print.summary.lm","text":"Prints comprehensive summary objects class summary.lm lm, including model statistics, ANOVA table, coefficients, optional tables (correlations, covariance, fits), followed five-number summary residuals model call.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.summary.lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a Summary for Linear Model Objects — print.summary.lm","text":"","code":"# S3 method for class 'summary.lm' print(   x,   digits = max(5, getOption(\"digits\") - 2),   symbolic.cor = NULL,   signif.stars = getOption(\"show.signif.stars\"),   options = NULL,   na.print = \"\",   eps = .Machine$double.eps,   ... )"},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.summary.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a Summary for Linear Model Objects — print.summary.lm","text":"x object class summary.lm lm. digits Minimal number significant digits. Defaults max(5, getOption(\"digits\") - 2). symbolic.cor implemented. Defaults NULL. signif.stars Logical; whether show significance stars coefficients table. Defaults getOption(\"show.signif.stars\"). options character vector optional summary tables print (e.g., \"v.correlation\", \"cov.unscaled\", \"correlation\", \"fits\"). Printed given order present. na.print String use NA values tables. eps Smallest positive floating-point value, used formatting near-zero residuals. Defaults .Machine$double.eps. ... Additional arguments (currently used).","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.summary.lm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print a Summary for Linear Model Objects — print.summary.lm","text":"function prints summary statistics, ANOVA, coefficients tables linear model order, along specified optional tables provided. concludes five-number-plus-mean summary residuals model call. objects class summary.lm, default print method used.","code":""},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.summary.lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a Summary for Linear Model Objects — print.summary.lm","text":"","code":"mdl <- lm(Sepal.Length ~ Sepal.Width, data = iris) summary(mdl) #>  #> Summary Statistics: #>                  Value      Performance      Measure  Err(Resids)   Metric #> Observations =     150      R-Squared =     0.013823       MAPE =  0.11751 #> F-Statistic =   2.0744      Adj-R2 =       0.0071593       MAD  =   0.6749 #> Pr(b's=0) =      0.152      Std.Err.Est =     0.8251       RMSE =  0.81958 #>  #> Analysis of Variance: #>                Deg.Frdm  Sum.of.Sqs  Mean.Sum.Sqs  F.statistic  p-value(F)     #> Regression            1      1.4122       1.41224       2.0744       0.152     #> Error(Resids)       148    100.7561       0.68078                              #> Total               149    102.1683                                            #>  #> Coefficients: #>              Coefficient  Std.Error   t-stat  p-value      VIF #> (Intercept)      6.52622    0.47890  13.6276   <2e-16 ***      #> Sepal.Width     -0.22336    0.15508  -1.4403    0.152          #>                                                                       #> Signif.Levels:  0 ‘***’ 0.001 ‘** ’ 0.01 ‘*  ’ 0.05 ‘.  ’ 0.1 ‘   ’ 1 #>                                                            #> Summary of   Min     1Q    Median   Mean     3Q      Max   #> Residuals: -1.556  -0.6333 -0.112  <3e-14  0.5579   2.223  #>                                                              #> Call:  lm(formula = Sepal.Length ~ Sepal.Width, data = iris) summary(mdl, options = c(\"correlation\", \"fits\")) #>  #> Summary Statistics: #>                  Value      Performance      Measure  Err(Resids)   Metric #> Observations =     150      R-Squared =     0.013823       MAPE =  0.11751 #> F-Statistic =   2.0744      Adj-R2 =       0.0071593       MAD  =   0.6749 #> Pr(b's=0) =      0.152      Std.Err.Est =     0.8251       RMSE =  0.81958 #>  #> Analysis of Variance: #>                Deg.Frdm  Sum.of.Sqs  Mean.Sum.Sqs  F.statistic  p-value(F)     #> Regression            1      1.4122       1.41224       2.0744       0.152     #> Error(Resids)       148    100.7561       0.68078                              #> Total               149    102.1683                                            #>  #> Coefficients: #>              Coefficient  Std.Error   t-stat  p-value      VIF #> (Intercept)      6.52622    0.47890  13.6276   <2e-16 ***      #> Sepal.Width     -0.22336    0.15508  -1.4403    0.152          #>                                                                       #> Signif.Levels:  0 ‘***’ 0.001 ‘** ’ 0.01 ‘*  ’ 0.05 ‘.  ’ 0.1 ‘   ’ 1 #>                                                            #> Summary of   Min     1Q    Median   Mean     3Q      Max   #> Residuals: -1.556  -0.6333 -0.112  <3e-14  0.5579   2.223  #>                                                              #> Call:  lm(formula = Sepal.Length ~ Sepal.Width, data = iris)"},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.summary.regsubsets.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Summary for Subset Selection (regsubsets) Objects — print.summary.regsubsets","title":"Print Summary for Subset Selection (regsubsets) Objects — print.summary.regsubsets","text":"Prints summary objects class summary.regsubsets regsubsets (leaps package), showing model selection statistics best subsets, including R-squared, adjusted R-squared, standard error estimate, Mallows' Cp, AIC.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.summary.regsubsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Summary for Subset Selection (regsubsets) Objects — print.summary.regsubsets","text":"","code":"# S3 method for class 'summary.regsubsets' print(x, ...)"},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.summary.regsubsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Summary for Subset Selection (regsubsets) Objects — print.summary.regsubsets","text":"x object class summary.regsubsets regsubsets. ... Additional arguments (currently used).","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.summary.regsubsets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Summary for Subset Selection (regsubsets) Objects — print.summary.regsubsets","text":"function prints model call table summarizing best models selected, including number predictors, R-squared, adjusted R-squared, standard error estimate (SEE), Mallows' Cp, included variables. input regsubsets object, converted summary summary(). , object returned unmodified.","code":""},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.summary.regsubsets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Summary for Subset Selection (regsubsets) Objects — print.summary.regsubsets","text":"","code":"if (FALSE) { # \\dontrun{ fit <- leaps::regsubsets(Fertility ~ ., data = swiss, nbest = 3) print.summary.regsubsets(fit) } # }"},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.table.summary.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a Table from Linear Model Summary — print.table.summary.lm","title":"Print a Table from Linear Model Summary — print.table.summary.lm","text":"Prints formatted table summary linear model, including coefficients, ANOVA, correlation matrices, summary statistics. Significance stars legends added appropriate.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.table.summary.lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a Table from Linear Model Summary — print.table.summary.lm","text":"","code":"# S3 method for class 'table.summary.lm' print(   x,   digits = max(4, getOption(\"digits\") - 2),   quote = FALSE,   na.print = \"\",   zero.print = \"0\",   right = TRUE,   justify = \"right\",   signif.stars = getOption(\"show.signif.stars\"),   eps = .Machine$double.eps,   nsmall = 4,   prnt.lgnd = c(\"coefficients\"),   dig.test = max(1, min(5, digits - 2)),   ... )"},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.table.summary.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a Table from Linear Model Summary — print.table.summary.lm","text":"x table object linear model summary (e.g., coefficients, ANOVA, statistics, correlation matrices). digits Number significant digits print. Defaults max(4, getOption(\"digits\") - 2). quote Logical; whether print quotes (default: FALSE). na.print String use NA values (default: \"). zero.print String use 0 values (default: 0). right Logical, indicating whether strings right aligned (default: TRUE). justify Justification columns (\"right\" \"left\"; default: \"right\"). signif.stars Logical; whether show significance stars p-values (default: getOption(\"show.signif.stars\")). eps Smallest positive floating-point value formatting near-zero p-values (default: .Machine$double.eps). nsmall Minimum number digits right decimal point (default: 4). prnt.lgnd Character vector naming tables print significance legends (default: \"coefficients\"). dig.test Digits hypothesis test statistics (default: max(1, min(5, digits - 2))). ... Additional arguments (currently used).","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.table.summary.lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a Table from Linear Model Summary — print.table.summary.lm","text":"Invisibly returns input table.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.table.summary.lm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print a Table from Linear Model Summary — print.table.summary.lm","text":"method handles tabular output linear model summaries, including coefficients, ANOVA, statistics, correlation/covariance matrices. formats p-values, adds significance stars, prints appropriate legends hypothesis tests.","code":""},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/reference/print.table.summary.lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a Table from Linear Model Summary — print.table.summary.lm","text":"","code":"mdl <- lm(Sepal.Length ~ Sepal.Width, data = iris) sumry <- summary(mdl) print(sumry$coefficients) #>              Coefficient  Std.Error   t-stat  p-value      VIF #> (Intercept)      6.52622    0.47890  13.6276   <2e-16 ***      #> Sepal.Width     -0.22336    0.15508  -1.4403    0.152          #>                                                                       #> Signif.Levels:  0 ‘***’ 0.001 ‘** ’ 0.01 ‘*  ’ 0.05 ‘.  ’ 0.1 ‘   ’ 1"},{"path":"https://cpa-wrk.github.io/BAQM/reference/stat_desc.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Descriptive Statistics for List or Data Frame — stat_desc","title":"Summary Descriptive Statistics for List or Data Frame — stat_desc","text":"Computes prints summary descriptive statistics variable list  data frame, including counts, numeric summaries (min, quartiles, mean, max, standard deviation), factor summaries (levels frequencies).","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/stat_desc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Descriptive Statistics for List or Data Frame — stat_desc","text":"","code":"stat_desc(   data,   transpose = FALSE,   pad = 2,   opts = list(digits = 4, scipen = 8) )"},{"path":"https://cpa-wrk.github.io/BAQM/reference/stat_desc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Descriptive Statistics for List or Data Frame — stat_desc","text":"data vector, list data frame containing variables summarize. vector treated single variable data frame. Unnamed variables receive generic names like V1, V2, etc. transpose logical concerning report format. default tables printed returned organized show variables columns statistic values rows. Setting transpose = TRUE generates transposed tables variables rows statistics columns. pad positive integer number spaces output columns.. opts key=value tupe list, optional input \"options\" values output. Existing values restored exit.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/stat_desc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Descriptive Statistics for List or Data Frame — stat_desc","text":"Invisibly returns list summary tables counts, numeric, factor variables.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/stat_desc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary Descriptive Statistics for List or Data Frame — stat_desc","text":"variable data, function computes count non-missing missing values. Numeric variables summarized minimum, first quartile, median, mean, third quartile, maximum, standard deviation. Factor character variables summarized level frequencies. Results formatted table printed. function returns list containing: cnt: Counts variable (n.val, n.na) num: Numeric summaries numeric variables fctr: Summaries factor variables rpt: formatted summary table (printed)","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/stat_desc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Descriptive Statistics for List or Data Frame — stat_desc","text":"","code":"stat_desc(penguins) #>           species    island  bill_len  bill_dep  flipper_len  body_mass #> n.val         344       344       342       342          342        342 #> n.na            0         0         2         2            2          2 #> min      n.lvls=3  n.lvls=3      32.1      13.1          172       2700 #> Q1       Adel:152  Bisc:168      39.2     15.45          190       3550 #> median   Gent:124  Drem:124     44.45      17.3          197       4050 #> mean     Chns: 68  Trgr: 52     43.92     17.15        200.9       4202 #> Q3                               48.5      18.7          214       4800 #> max                              59.6      21.5          231       6300 #> std.dev                          5.46     1.975        14.06        802 #>               sex    year #> n.val         333     344 #> n.na           11       0 #> min      n.lvls=2    2007 #> Q1       male:168    2007 #> median   feml:165    2008 #> mean                 2008 #> Q3                   2009 #> max                  2009 #> std.dev            0.8184 stat_desc(data.frame(a = rnorm(100),           b = c(NA, 1:98, NA),           c = sample(letters[4:6], 100, TRUE)),           transpose = TRUE, pad = 1) #>   n.val n.na      min       Q1   median     mean     Q3   max std.dev #> a   100    0   -1.914  -0.6432  -0.1679 0.009043 0.6221 2.308  0.9815 #> b    98    2        1       25     49.5     49.5     74    98   28.43 #> c   100    0 n.lvls=3 d    :39 f    :35 e    :26"},{"path":"https://cpa-wrk.github.io/BAQM/reference/summary.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for Linear Model (lm) Objects — summary.lm","title":"Summary Method for Linear Model (lm) Objects — summary.lm","text":"Computes comprehensive summary object class lm, including performance statistics, ANOVA, coefficients VIFs, correlation/covariance tables. Handles factor variable recoding collinearity/singularity warnings.","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/summary.lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for Linear Model (lm) Objects — summary.lm","text":"","code":"# S3 method for class 'lm' summary(object, ...)"},{"path":"https://cpa-wrk.github.io/BAQM/reference/summary.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for Linear Model (lm) Objects — summary.lm","text":"object object class lm. ... Additional arguments (currently unused).","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/summary.lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for Linear Model (lm) Objects — summary.lm","text":"object class summary.lm containing tables statistics described .","code":""},{"path":"https://cpa-wrk.github.io/BAQM/reference/summary.lm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary Method for Linear Model (lm) Objects — summary.lm","text":"returned summary object includes: stats: Performance statistics (F-statistic, R-squared, RMSE, etc.) anova: Simplified ANOVA table (Sum squares, mean squares, F-statistic, p-value) coefficients: Table regression coefficients standard errors, t-stats, p-values, VIFs cov.unscaled, correlation: Covariance correlation matrices coefficients v.correlation: Variable correlation matrix (models interaction terms) fits: Observed, fitted, residual values aliased: Logical vector indicating aliased coefficients df: Degrees freedom sigma: Estimated standard deviation residuals r.squared, adj.r.squared: R-squared adjusted R-squared fstatistic, f.pval: F-statistic p-value overall regression notes: Warnings, singularity, collinearity notes (attached attribute) Factor variable names recoded clarity, coefficients aliased singular variables omitted notes produced attributes.","code":""},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/reference/summary.lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Method for Linear Model (lm) Objects — summary.lm","text":"","code":"mdl <- lm(Sepal.Length ~ Sepal.Width + Petal.Length, data = iris) summary(mdl) #>  #> Summary Statistics: #>                  Value      Performance    Measure  Err(Resids)    Metric #> Observations =     150      R-Squared =    0.84018       MAPE =  0.045172 #> F-Statistic =   386.39      Adj-R2 =        0.8380       MAD  =   0.26563 #> Pr(b's=0) =     <2e-16 ***  Std.Err.Est =  0.33329       RMSE =   0.32994 #>  #> Analysis of Variance: #>                Deg.Frdm  Sum.of.Sqs  Mean.Sum.Sqs  F.statistic  p-value(F)     #> Regression            2      85.840      42.91978       386.39      <2e-16 *** #> Error(Resids)       147      16.329       0.11108                              #> Total               149     102.168                                            #>  #> Coefficients: #>               Coefficient  Std.Error   t-stat   p-value         VIF #> (Intercept)       2.24914   0.247970   9.0702  7.04e-16 ***         #> Sepal.Width       0.59552   0.069328   8.5899  1.16e-14 ***  1.2248 #> Petal.Length      0.47192   0.017118  27.5692   < 2e-16 ***  1.2248 #>                                                                       #> Signif.Levels:  0 ‘***’ 0.001 ‘** ’ 0.01 ‘*  ’ 0.05 ‘.  ’ 0.1 ‘   ’ 1 #>                                                                        #> Summary of    Min       1Q       Mean     Median      3Q        Max    #> Residuals:  -0.9616   -0.2349   <3e-14   0.0007718  0.2145    0.7856   #>                                                                             #> Call:  lm(formula = Sepal.Length ~ Sepal.Width + Petal.Length, data = iris)"},{"path":[]},{"path":"https://cpa-wrk.github.io/BAQM/news/index.html","id":"baqm-011","dir":"Changelog","previous_headings":"","what":"BAQM 0.1.1","title":"BAQM 0.1.1","text":"Initial CRAN submission.","code":""}]
