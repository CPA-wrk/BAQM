% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lm_plot.4way.R
\name{lm_plot.4way}
\alias{lm_plot.4way}
\title{Create a Four-Panel Regression Assumptions Plot}
\usage{
lm_plot.4way(
  mdl,
  opt = list(ts = FALSE),
  parm = list(),
  plt_nms = c("fit", "var", "qq", ifelse(opt$ts, "ac", "infl"))
)
}
\arguments{
\item{mdl}{A fitted model object (typically from \code{\link[stats]{lm}}).}

\item{opt}{A named \code{list} of options. Recognized elements include:
\describe{
  \item{\code{ts}}{Logical; \code{TRUE} if data are time series, \code{FALSE} otherwise.}
  \item{\code{pred_intvl_pts}}{Integer; number of prediction points (default 100).}
  \item{\code{pval.SW}, \code{pval.BP}, \code{pval.DW}}{Logical; include p-values from Shapiro–Wilk,
    Breusch–Pagan, and Durbin–Watson tests in the plots.}
  \item{\code{cook.loess}}{Logical; whether to overlay Cook's distance loess curve.}
}}

\item{parm}{List of plot formatting parameters (see \code{\link{lm_plot.parms}}).}

\item{plt_nms}{Character vector of which panels to plot. Defaults to fit, var, qq, and ac/infl depending on \code{opt$ts}.}
}
\value{
A \code{ggplot} object representing the 4-way diagnostic panel.
  Invisibly returns a list containing:
  \itemize{
    \item \code{p_4way} – the combined plot,
    \item other elements passed through from the individual plot functions.
  }
}
\description{
Generates a 4-panel diagnostic plot for a multiple regression model, including:
1) Fitted values vs. observed values (check for non-linearity),
2) Quantile–Quantile plot of residuals (check for non-normality),
3) Residuals vs. fitted values (check for heteroskedasticity),
4) Autocorrelation or influence plot depending on whether data are time series.
}
\details{
This function is a high-level wrapper that calls internal plotting functions
(\code{lm_plot.fit}, \code{lm_plot.var}, \code{lm_plot.qq}, and either \code{lm_plot.ac} or
\code{lm_plot.infl}) and assembles their outputs into a combined \code{\link[cowplot]{plot_grid}}.
}
\examples{
\dontrun{
fit <- lm(mpg ~ wt + hp, data = mtcars)
lm_plot.4way(fit, opt = list(ts = FALSE, pval.DW = TRUE))
}
}
